C51 COMPILER V9.54   STC_PIT                                                               08/14/2018 15:33:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE STC_PIT
OBJECT MODULE PLACED IN .\Prj\KEIL\STC15_Debug\Obj\STC_PIT.obj
COMPILER INVOKED BY: E:\program files\Keil C51 v5\C51\BIN\C51.EXE Chip\src\STC_PIT.c LARGE OMF2 OPTIMIZE(9,SPEED) REGFIL
                    -E(.\Prj\KEIL\STC15_Debug\Obj\雪之澜_STC单片机库_v2.ORC) BROWSE MODP2 INCDIR(..\文档;.\App\Inc;.\Board\inc;.\Chip\Inc;.\C
                    -hip\Inc\kinetis) DEBUG PRINT(.\Prj\KEIL\STC15_Debug\List\STC_PIT.lst) TABS(2) OBJECT(.\Prj\KEIL\STC15_Debug\Obj\STC_PIT.
                    -obj)

line level    source

   1          #include "common.h"
   2          #include "STC_PIT.h"
   3          
   4          /*!
   5           *  @brief    关闭PIT计时
   6           *  @param    
   7           *  @warning  
   8           *  @sampleusage: 
   9           */
  10           
  11          void pit_close(TIMERn_e timer)//关闭PIT计时
  12          {
  13   1        switch(timer)
  14   1        {
  15   2          case T0 : TR0=0;break;
  16   2          case T1 : TR1=0;break;
  17   2          case T2 : BIT_CLR(AUXR,4); break;
  18   2          case T3 : BIT_CLR(T4T3M,3);break;
  19   2          case T4 : BIT_CLR(T4T3M,7);break;
  20   2        }
  21   1      }
  22          
  23          /*!
  24           *  @brief    初始化PIT并设置定时时间
  25           *  @param    timer   定时器模块号
  26                        num     定时时间
  27           *  @warning  默认使用16位自动重装模式
  28           *  @sampleusage: pit_init(T0,10000);//启用T0定时器,并且定时时间为10000个系统周期
  29           */
  30          
  31          void pit_init(TIMERn_e timer , uint16 num)//初始化并启动定时器
  32          {
  33   1        num = 0xffff - num;//计算好需要填入定时计数器寄存器的值
  34   1        if(timer == T0)//若使用T0定时器
  35   1          {
  36   2            TF0 = 0;//清除溢出中断标志
  37   2            BIT_SET(AUXR,7);//T0定时器工作在1T模式（系统时钟不分频作为定时器节奏）
  38   2            REPLACE(TMOD,3,0,0);//16位自动重装，不受外部引脚控制，定时器
  39   2            TL0 = num;//设置定时器走时长度
  40   2            TH0 = num>>8;////设置定时器走时长度
  41   2            TR0 = 1;//T0定时器开始计时
  42   2          }
  43   1          else if(timer == T1)
  44   1               {
  45   2                 TF1 = 0;//清除溢出中断标志
  46   2                 BIT_SET(AUXR,6);//T1定时器工作在1T模式（系统时钟不分频作为定时器节奏）
  47   2                 REPLACE(TMOD,7,4,0);//16位自动重装，不受外部引脚控制，定时器
  48   2                 TL1 = num;//设置定时器走时长度
  49   2                 TH1 = num>>8;//设置定时器走时长度
  50   2                 TR1 = 1;//T1定时器开始计时
  51   2               }
  52   1               else if(timer == T2)
C51 COMPILER V9.54   STC_PIT                                                               08/14/2018 15:33:59 PAGE 2   

  53   1                    {
  54   2                      BIT_SET(AUXR,2);//T2定时器工作在1T模式（系统时钟不分频作为定时器节奏）
  55   2                      T2L = num;//设置定时器走时长度
  56   2                      T2H = num>>8;//设置定时器走时长度
  57   2                      BIT_CLR(AUXR,3);//T2用作定时器
  58   2                      BIT_SET(AUXR,4);//T2定时器开始计时
  59   2                    }
  60   1                    else if(timer == T3)
  61   1                         {
  62   2                           BIT_SET(T4T3M,1);//T3定时器工作在1T模式（系统时钟不分频作为定时器节奏）
  63   2                           T3L = num;//设置定时器走时长度
  64   2                           T3H = num>>8;//设置定时器走时长度
  65   2                           BIT_CLR(T4T3M,2);//T3用作定时器
  66   2                           BIT_SET(T4T3M,3);//T3定时器开始计时
  67   2                         }
  68   1                         else if(timer == T4)
  69   1                              {
  70   2                                BIT_SET(T4T3M,5);//T4定时器工作在1T模式（系统时钟不分频作为定时器节奏）
  71   2                                T4L = num;//设置定时器走时长度
  72   2                                T4H = num>>8;//设置定时器走时长度
  73   2                                BIT_CLR(T4T3M,6);//T4用作定时器
  74   2                                BIT_SET(T4T3M,7);//T4定时器开始计时
  75   2                              }
  76   1      }
  77          
  78          /*!
  79           *  @brief    更改定时时间
  80           *  @param    timer   定时器模块号
  81                        num     定时时间
  82           *  @warning  
  83           *  @sampleusage: pit_change(T0,500);//将T0定时器的定时时间更改为500个系统周期
  84           */
  85          
  86          void pit_change(TIMERn_e timer , uint16 num)
  87          {
  88   1        num = 0xffff - num;//计算好需要填入定时计数器寄存器的值
  89   1        if(timer == T0)//若使用T0定时器
  90   1          {
  91   2            TL0 = num;//设置定时器走时长度
  92   2            TH0 = num>>8;////设置定时器走时长度
  93   2          }
  94   1          else if(timer == T1)
  95   1               {
  96   2                 TL1 = num;//设置定时器走时长度
  97   2                 TH1 = num>>8;//设置定时器走时长度
  98   2               }
  99   1               else if(timer == T2)
 100   1                    {
 101   2                      T2L = num;//设置定时器走时长度
 102   2                      T2H = num>>8;//设置定时器走时长度
 103   2                    }
 104   1                    else if(timer == T3)
 105   1                         {
 106   2                           T3L = num;//设置定时器走时长度
 107   2                           T3H = num>>8;//设置定时器走时长度
 108   2                         }
 109   1                         else if(timer == T4)
 110   1                              {
 111   2                                T4L = num;//设置定时器走时长度
 112   2                                T4H = num>>8;//设置定时器走时长度
 113   2                              }
 114   1      }
C51 COMPILER V9.54   STC_PIT                                                               08/14/2018 15:33:59 PAGE 3   

 115          
 116          /*!
 117           *  @brief    读取定时器当前计时数值
 118           *  @param    timer     定时器模块号
 119           *  @warning  定时器计时走数是从0开始，每过一个计时周期其值增加1
 120           *  @sampleusage: pit_get(T0); //获取T0定时器当前计数值
 121           */
 122          uint16 pit_get(TIMERn_e timer)
 123          {
 124   1        if(timer == T0) return (TH0<<8)|TL0;//若使用T0定时器
 125   1          else if(timer == T1) return (TH1<<8)|TL1;
 126   1               else if(timer == T2) return (T2H<<8)|T2L;
 127   1                    else if(timer == T3) return (T3H<<8)|T3L;
 128   1                         else if(timer == T4) return (T4H<<8)|T4L;
 129   1                              else return 0;
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
