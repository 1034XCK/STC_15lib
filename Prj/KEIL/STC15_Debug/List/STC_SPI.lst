C51 COMPILER V9.54   STC_SPI                                                               08/14/2018 15:34:00 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE STC_SPI
OBJECT MODULE PLACED IN .\Prj\KEIL\STC15_Debug\Obj\STC_SPI.obj
COMPILER INVOKED BY: E:\program files\Keil C51 v5\C51\BIN\C51.EXE Chip\src\STC_SPI.c LARGE OMF2 OPTIMIZE(9,SPEED) REGFIL
                    -E(.\Prj\KEIL\STC15_Debug\Obj\Ñ©Ö®À½_STCµ¥Æ¬»ú¿â_v2.ORC) BROWSE MODP2 INCDIR(..\ÎÄµµ;.\App\Inc;.\Board\inc;.\Chip\Inc;.\C
                    -hip\Inc\kinetis) DEBUG PRINT(.\Prj\KEIL\STC15_Debug\List\STC_SPI.lst) TABS(2) OBJECT(.\Prj\KEIL\STC15_Debug\Obj\STC_SPI.
                    -obj)

line level    source

   1          #include "common.h"
   2          #include "STC_SPI.h"
   3          #include "STC_interrupt.h"
   4          #include "STC_gpio.h"
   5          #include "STC_UART.h"//SPI×ª´®¿ÚÊ±Ê¹ÓÃ
   6          
   7          bit SPI_BUSY = 0;//SPI×ÜÏßÃ¦×´Ì¬£¬Ã¦Ê±²»µÃ¶ÔÊý¾Ý¼Ä´æÆ÷Ð´²Ù×÷
   8          
   9          /*!
  10           *  @brief    SPI³õÊ¼»¯
  11           *  @param    M_S_MODE    Ö÷´ÓÄ£Ê½Ñ¡Ôñ
  12                        BIT_ERDER   Î»´«ÊäË³Ðò£¨¸ßÎ»ÔÚÇ°»¹ÊÇµÍÎ»ÔÚÇ°£©
  13                        SPI_MODEn   SPIÄ£Ê½Ñ¡Ôñ£¨0~4£©
  14                        SCLK_SPEADn SPIËÙÂÊÑ¡Ôñ
  15           *  @warning  SPIÊý¾Ý»òÊ±ÖÓÒý½ÅËùÔÚIO¿Ú¹¤×÷Ä£Ê½Ðè×¢Òâ£¬ÉÏµç³õÊ¼»¯Îª×¼Ë«Ïò¿Ú
  16                        ÕâÊÇSTCµ¥Æ¬»ú×Ô´øµÄÓ²¼þSPI£¬Ã¿´ÎÖ»Ö§³Ö8Î»´«Êä£¬²»ÄÜÂú×ãËùÓÐµÄSPIÆ÷¼þ£¬ÈôÓ²¼þSPIÂú×ã²»ÁË¿É²Î¿
             -¼STC_soft_SPI
  17           *  @sampleusage: SPI_init(MASTER,MSB_SPI,SPI_MODE0,FRAC_128_SPEAD);//SPI¹¤×÷ÔÚÖ÷»úÄ£Ê½£¬¸ßÎ»ÏÈ·¢ËÍ£¬Ä£Ê½0£
             -¬ÏµÍ³128·ÖÆµËÙÂÊ
  18           */
  19          
  20          void SPI_init(M_S_MODE_e M_S_MODE , BIT_ERDER_e BIT_ERDER , SPI_MODEn_e SPI_MODEn , SCLK_SPEADn_e SCLK_SPE
             -ADn)
  21          {
  22   1        if(SPI_MOSI==p13 && SPI_MISO==p14 && SPI_SCLK==p15) REPLACE(P_SW1,3,2,0);
  23   1        else if(SPI_MOSI==p23 && SPI_MISO==p22 && SPI_SCLK==p21)  REPLACE(P_SW1,3,2,1);
  24   1             else if(SPI_MOSI==p40 && SPI_MISO==p41 && SPI_SCLK==p43) REPLACE(P_SW1,3,2,2);
  25   1        SPDAT  = 0x00;//Çå³ýSPIÊý¾Ý¼Ä´æÆ÷
  26   1        SPSTAT = 0xff;//Çå³ýSPI´«ÊäÍê³É¼°Ð´³åÍ»±êÖ¾
  27   1        BIT_SET(SPCTL,7);//ºöÂÔSSÒý½Å£¬Ö÷´ÓÓÉÈí¼þ¿ØÖÆ
  28   1        REPLACE(SPCTL,4,4,M_S_MODE);//Ö÷´ÓÄ£Ê½Ñ¡Ôñ
  29   1        REPLACE(SPCTL,5,5,BIT_ERDER);//SPIÊý¾Ý·¢ËÍºÍ½ÓÊÕµÄÎ»Ë³ÐòÑ¡Ôñ
  30   1        REPLACE(SPCTL,3,2,SPI_MODEn);//SPIÄ£Ê½Ñ¡Ôñ
  31   1        REPLACE(SPCTL,1,0,SCLK_SPEADn);//SPIÊ±ÖÓËÙÂÊÑ¡Ôñ
  32   1        
  33   1        BIT_SET(SPCTL,6);//ÆôÓÃSPIÄ£¿é
  34   1        set_vector_handler(SPI_VECTORn , SPI_IRQHandler);//SPIµÄÖÐ¶Ï·þÎñº¯ÊýÎªSPI_IRQHandler
  35   1        BIT_SET(IE2,1);//ÔÊÐíSPIÖÐ¶Ï
  36   1        EA=1;
  37   1      }
  38          
  39          /*!
  40           *  @brief    SPIÖÐ¶Ï£¨½ÓÊÕÎªÖ÷£©
  41           *  @param    
  42           *  @warning  ÓÉ´Ë½ÓÊÕSPIµÄÊý¾Ý
  43           *  @sampleusage: Ö÷º¯ÊýÒ»°ã½ûÖ¹µ÷ÓÃÖÐ¶Ïº¯Êý
  44           */
  45          
  46          void SPI_IRQHandler(void)
  47          {
  48   1        SPSTAT = 0xff;//Çå³ýSPI´«ÊäÍê³É¼°Ð´³åÍ»±êÖ¾
  49   1        SPI_BUSY = 0;
C51 COMPILER V9.54   STC_SPI                                                               08/14/2018 15:34:00 PAGE 2   

  50   1        //½ÓÊÕÊý¾ÝSPDAT
  51   1        //Uart_SendData(UART0,SPDAT);//½ÓÊÕSPI²¢Í¨¹ýUART»Ø´«Êý¾Ý¡¾SPI×ª´®¿ÚÊ±Ê¹ÓÃ¡¿
  52   1      }
  53          
  54          /*!
  55           *  @brief    SPI·¢ËÍ1×Ö½ÚÊý¾Ý
  56           *  @param    dat Òª·¢ËÍµÄ1×Ö½ÚÊý¾Ý
  57           *  @warning  
  58           *  @sampleusage: SPI_SendData(0x10);//ÓÃSPI×ÜÏß·¢ËÍ8Î»Êý¾Ý0x10
  59           */
  60          
  61          void SPI_SendData(uint8 dat)
  62          {
  63   1        while(SPI_BUSY);//µÈ´ýÉÏÒ»Ö¡Êý¾Ý·¢ËÍÍê³É
  64   1        SPI_BUSY = 1;
  65   1        SPDAT = dat;
  66   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    109    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
